import { createInstance } from "../fhevmjs/dist/node.js";

let instance;

export async function initFheInstance(): Promise<void> {
  instance = await createInstance({
    publicKey: "0x00", // –§–∏–∫—Ç–∏–≤–Ω—ã–π –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á, –µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
    kmsAddress: "0x518549923A16D646E883BC7345A663D307Bf3164", // üîÅ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞
    chainId: 11155111, // Sepolia
  });
}

export function encryptValue(value: number): Uint8Array {
  if (!instance) throw new Error("Instance is not initialized");

  const { ciphertext } = instance.encrypt32(value);

  if (typeof ciphertext === "string") {
    throw new Error("‚ùå fhevmjs –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Uint8Array ‚Äî –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å —Å–±–æ—Ä–∫—É");
  }

  return ciphertext;
}
